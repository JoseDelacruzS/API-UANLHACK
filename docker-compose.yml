version: '3.8'

services:
  # API
  api:
    build: .
    container_name: uanl-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/uanl_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    restart: unless-stopped

  # Base de datos PostgreSQL
  db:
    image: postgres:15
    container_name: uanl-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: uanl_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Redis para cache y colas
  redis:
    image: redis:7-alpine
    container_name: uanl-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Worker Celery para tareas as√≠ncronas
  worker:
    build: .
    container_name: uanl-worker
    command: celery -A app.worker worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/uanl_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app/app
    restart: unless-stopped

  # Celery Beat para tareas programadas
  beat:
    build: .
    container_name: uanl-beat
    command: celery -A app.worker beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/uanl_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app/app
    restart: unless-stopped

  # Flower para monitoreo de Celery
  flower:
    build: .
    container_name: uanl-flower
    command: celery -A app.worker flower
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/uanl_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
